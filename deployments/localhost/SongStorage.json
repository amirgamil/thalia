{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        }
      ],
      "name": "NewSongCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongEdited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongMinted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "newNotes",
          "type": "bytes32[]"
        }
      ],
      "name": "addNotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        }
      ],
      "name": "createNewSong",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "newNotes",
          "type": "bytes32[]"
        }
      ],
      "name": "createNewSongWithNotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "deleteSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSongs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isMinted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "bytes32[]",
              "name": "notes",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "bpm",
              "type": "uint32"
            }
          ],
          "internalType": "struct SharedDataStructures.Song[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfSongs",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getSongFromId",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "mintSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "songOwnerCount",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songs",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isMinted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isDeleted",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "id",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "bpm",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x42a14e87151418c90bdec6e35d28191de51e47dadf77a0eb0d18493545ff77fc",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1617893",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xf5c362604e4af2dbdae96f3639da0232408a4d1c98983b827f7f45f0296961e0",
    "transactionHash": "0x42a14e87151418c90bdec6e35d28191de51e47dadf77a0eb0d18493545ff77fc",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1617893",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6da706941028178f2df1c8e18f876012",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"}],\"name\":\"NewSongCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"newNotes\",\"type\":\"bytes32[]\"}],\"name\":\"addNotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"}],\"name\":\"createNewSong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"newNotes\",\"type\":\"bytes32[]\"}],\"name\":\"createNewSongWithNotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deleteSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSongs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"notes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"internalType\":\"struct SharedDataStructures.Song[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfSongs\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSongFromId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"mintSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"songOwnerCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SongStorage.sol\":\"SongStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SharedDataStructures.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nlibrary SharedDataStructures {\\n    struct Song {\\n        string name;\\n        //@notice, a song that has been minted into an NFT and stored on the Permaweb\\n        //can no longer be added to it.\\n        bool isMinted;\\n        //@notice we keep a record of whether a song has been deleted or not\\n        //to avoid to having to make an expensive write to adjust ids of existing songs.\\n        //Instead, we set this boolean variable and delete notes.\\n        //Any interaction with this song checks that this is not deleted\\n        bool isDeleted;\\n        //@notice array of characters that compromise the notes of the song. These\\n        //get directly synthesized in the client by mapping them to actual notes.\\n        //We uses bytes32 since each character in a song is of a fixed size, and\\n        //this is more gas-optimized/cheaper\\n        bytes32[] notes;\\n        //@notice we use uint32 for struct packing\\n        uint32 id;\\n        uint32 bpm;\\n    }\\n}\",\"keccak256\":\"0x9f037695579ed9bb61468f8bd028c183b4a110b958179a877c7a4a7711548a3d\",\"license\":\"MIT\"},\"contracts/SongStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"./SharedDataStructures.sol\\\";\\n\\ncontract SongStorage {\\n    SharedDataStructures.Song[] public songs;\\n    mapping (uint => address) public songToOwner; \\n    mapping (address => int) public songOwnerCount; \\n\\n    //@notice event for when a new song is made\\n    event NewSongCreated (string name, uint id, uint bpm);\\n    event SongEdited (string name, uint id);\\n    event SongDeleted(string name, uint id);\\n    event SongMinted(string name, uint id);\\n\\n    function getAllSongs() view public returns (SharedDataStructures.Song[] memory) {\\n        return songs;\\n    }\\n\\n    function getSongFromId(uint id) view public returns (string memory, bool, bool, bytes32[] memory, uint32, uint32) {\\n        require(id < songs.length);\\n\\n        SharedDataStructures.Song memory currSong = songs[id];\\n\\n        return (currSong.name, currSong.isMinted, currSong.isDeleted, currSong.notes, currSong.id, currSong.bpm);\\n    }\\n\\n    function getNumberOfSongs() view public returns (uint32) {\\n        return uint32(songs.length);\\n    }\\n\\n    function _getSongOwner(uint id) view internal returns (address) {\\n        return songToOwner[id];\\n    }\\n\\n    modifier onlySongOwner(uint id) {\\n        require(msg.sender == _getSongOwner(id));\\n        _;\\n    }\\n\\n    function _createSong(string memory _name, uint bpm) internal returns (uint) {\\n        uint32 newId = getNumberOfSongs();\\n        //@notice set limit on number of songs a person can create to prevent bots etc.\\n        require(songOwnerCount[msg.sender] < 15);\\n\\n        songs.push(SharedDataStructures.Song({name: _name, isMinted: false, isDeleted: false, notes: new bytes32[](0), id: newId, bpm: uint32(bpm)}));\\n\\n        songToOwner[newId] = msg.sender;\\n        //@notice we don't need to check if this exists due to Solidity's design of mappings\\n        songOwnerCount[msg.sender]++;\\n\\n        emit NewSongCreated(_name, newId, bpm);\\n\\n        return newId; \\n    }  \\n\\n    //@notice returns the id of the newly created song\\n    function createNewSong(string memory _name, uint bpm) public returns (uint) {\\n        return _createSong(_name, bpm);\\n    }\\n    \\n    //@notice creates a new song like above, but also adds notes to the songs. This is done to optimize gas\\n    //as opposed to calling createSong and then addNotes\\n    function createNewSongWithNotes(string memory _name, uint bpm, bytes32[] memory newNotes) public returns (uint) {\\n        uint id = _createSong(_name, bpm);\\n\\n        SharedDataStructures.Song storage newSong = songs[id];\\n        newSong.notes = newNotes;\\n\\n        return id;\\n    }\\n\\n    function _addNotesToSong(uint id, bytes32[] memory newNotes) internal {\\n        //@notice ensure we're adding to a song that actually exists\\n        require(id < songs.length);\\n        //@notice for now, can only append 15 new notes at a time\\n        require(newNotes.length < 15);\\n\\n        SharedDataStructures.Song storage currentSong = songs[id];\\n\\n        require(!currentSong.isDeleted);\\n        require(!currentSong.isMinted);\\n\\n        for (uint i=0; i < newNotes.length; i++) {\\n            currentSong.notes.push(newNotes[i]);\\n        }\\n\\n        emit SongEdited(currentSong.name, id);\\n\\n    }\\n\\n    function addNotes(uint id, bytes32[] memory newNotes) public {\\n        _addNotesToSong(id, newNotes);\\n    }\\n\\n    function deleteSong(uint id) onlySongOwner(id) public {\\n        require(id < songs.length);\\n        require(!songs[id].isDeleted);\\n\\n        songs[id].isDeleted = true;\\n        //@notice we delete the most expensive part of storing a song and bpm\\n        //which will no longer be used\\n        delete songs[id].notes;\\n        delete songs[id].bpm;\\n\\n        emit SongDeleted(songs[id].name, id);\\n    }\\n\\n    function mintSong(uint id) public {\\n        require(id < songs.length);\\n        require(!songs[id].isDeleted);\\n\\n        songs[id].isMinted = true;\\n\\n        emit SongMinted(songs[id].name, id);\\n\\n    }\\n\\n}\",\"keccak256\":\"0x26b6ed03df0045ab20cc3abd97d8a22bb6939133e5fafad42ef12245355029b6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c5a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a8ec42d811610071578063a8ec42d814610168578063e0eb2d8214610186578063e970a2c4146101a2578063f17b0fd2146101d7578063f9ce14ab14610207578063fa8ce78314610237576100a9565b806329921f3d146100ae57806329ef6862146100de578063304cff30146100fc578063408dd3181461013057806366fa94391461014c575b600080fd5b6100c860048036038101906100c3919061101f565b610267565b6040516100d5919061108d565b60405180910390f35b6100e661029a565b6040516100f39190611395565b60405180910390f35b6101166004803603810190610111919061101f565b610465565b60405161012795949392919061141f565b60405180910390f35b61014a6004803603810190610145919061101f565b61056d565b005b610166600480360381019061016191906115ed565b610659565b005b610170610667565b60405161017d9190611649565b60405180910390f35b6101a0600480360381019061019b919061101f565b610673565b005b6101bc60048036038101906101b7919061101f565b61080a565b6040516101ce969594939291906116d3565b60405180910390f35b6101f160048036038101906101ec91906117f7565b6109f5565b6040516101fe9190611891565b60405180910390f35b610221600480360381019061021c91906118d8565b610a4e565b60405161022e919061191e565b60405180910390f35b610251600480360381019061024c9190611939565b610a66565b60405161025e9190611891565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561045c57838290600052602060002090600402016040518060c00160405290816000820180546102f1906119c4565b80601f016020809104026020016040519081016040528092919081815260200182805461031d906119c4565b801561036a5780601f1061033f5761010080835404028352916020019161036a565b820191906000526020600020905b81548152906001019060200180831161034d57829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff16151515158152602001600282018054806020026020016040519081016040528092919081815260200182805480156103f857602002820191906000526020600020905b8154815260200190600101908083116103e4575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050815260200190600101906102be565b50505050905090565b6000818154811061047557600080fd5b9060005260206000209060040201600091509050806000018054610498906119c4565b80601f01602080910402602001604051908101604052809291908181526020018280546104c4906119c4565b80156105115780601f106104e657610100808354040283529160200191610511565b820191906000526020600020905b8154815290600101906020018083116104f457829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16905085565b600080549050811061057e57600080fd5b60008181548110610592576105916119f6565b5b906000526020600020906004020160010160019054906101000a900460ff16156105bb57600080fd5b6001600082815481106105d1576105d06119f6565b5b906000526020600020906004020160010160006101000a81548160ff0219169083151502179055507fc778ab168cf50ad9990325dab79ac53c265f46e968c7e7e9a656917ddcd214f86000828154811061062e5761062d6119f6565b5b90600052602060002090600402016000018260405161064e929190611aba565b60405180910390a150565b6106638282610a7a565b5050565b60008080549050905090565b8061067d81610b9c565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106b457600080fd5b60008054905082106106c557600080fd5b600082815481106106d9576106d86119f6565b5b906000526020600020906004020160010160019054906101000a900460ff161561070257600080fd5b600160008381548110610718576107176119f6565b5b906000526020600020906004020160010160016101000a81548160ff02191690831515021790555060008281548110610754576107536119f6565b5b906000526020600020906004020160020160006107719190610ea7565b60008281548110610785576107846119f6565b5b906000526020600020906004020160030160046101000a81549063ffffffff02191690557f183bbdfff8def210a436cb315786c936109b5fb4c0b5c21350a735183fce41f1600083815481106107de576107dd6119f6565b5b9060005260206000209060040201600001836040516107fe929190611aba565b60405180910390a15050565b60606000806060600080600080549050871061082557600080fd5b600080888154811061083a576108396119f6565b5b90600052602060002090600402016040518060c0016040529081600082018054610863906119c4565b80601f016020809104026020016040519081016040528092919081815260200182805461088f906119c4565b80156108dc5780601f106108b1576101008083540402835291602001916108dc565b820191906000526020600020905b8154815290600101906020018083116108bf57829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561096a57602002820191906000526020600020905b815481526020019060010190808311610956575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050806000015181602001518260400151836060015184608001518560a001519650965096509650965096505091939550919395565b600080610a028585610bd9565b90506000808281548110610a1957610a186119f6565b5b9060005260206000209060040201905083816002019080519060200190610a41929190610ec8565b5081925050509392505050565b60026020528060005260406000206000915090505481565b6000610a728383610bd9565b905092915050565b6000805490508210610a8b57600080fd5b600f815110610a9957600080fd5b6000808381548110610aae57610aad6119f6565b5b906000526020600020906004020190508060010160019054906101000a900460ff1615610ada57600080fd5b8060010160009054906101000a900460ff1615610af657600080fd5b60005b8251811015610b5a5781600201838281518110610b1957610b186119f6565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150558080610b5290611b19565b915050610af9565b507f658fe9d65ce0430feac5385a825e9ccebc9b0cf9e422d97acbca097ee8aa27098160000184604051610b8f929190611aba565b60405180910390a1505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610be4610667565b9050600f600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412610c3257600080fd5b60006040518060c00160405280868152602001600015158152602001600015158152602001600067ffffffffffffffff811115610c7257610c7161147e565b5b604051908082528060200260200182016040528015610ca05781602001602082028036833780820191505090505b5081526020018363ffffffff1681526020018563ffffffff1681525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610d01929190610f15565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055506060820151816002019080519060200190610d5e929190610ec8565b5060808201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160046101000a81548163ffffffff021916908363ffffffff160217905550505033600160008363ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610e5790611b62565b91905055507f703bc72923f32c87b82929cc095acb284b614c7b0d9691d2709ee77430fcacf0848285604051610e8f93929190611be6565b60405180910390a18063ffffffff1691505092915050565b5080546000825590600052602060002090810190610ec59190610f9b565b50565b828054828255906000526020600020908101928215610f04579160200282015b82811115610f03578251825591602001919060010190610ee8565b5b509050610f119190610f9b565b5090565b828054610f21906119c4565b90600052602060002090601f016020900481019282610f435760008555610f8a565b82601f10610f5c57805160ff1916838001178555610f8a565b82800160010185558215610f8a579182015b82811115610f89578251825591602001919060010190610f6e565b5b509050610f979190610fb8565b5090565b5b80821115610fb4576000816000905550600101610f9c565b5090565b5b80821115610fd1576000816000905550600101610fb9565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ffc81610fe9565b811461100757600080fd5b50565b60008135905061101981610ff3565b92915050565b60006020828403121561103557611034610fdf565b5b60006110438482850161100a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110778261104c565b9050919050565b6110878161106c565b82525050565b60006020820190506110a2600083018461107e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561110e5780820151818401526020810190506110f3565b8381111561111d576000848401525b50505050565b6000601f19601f8301169050919050565b600061113f826110d4565b61114981856110df565b93506111598185602086016110f0565b61116281611123565b840191505092915050565b60008115159050919050565b6111828161116d565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6111c7816111b4565b82525050565b60006111d983836111be565b60208301905092915050565b6000602082019050919050565b60006111fd82611188565b6112078185611193565b9350611212836111a4565b8060005b8381101561124357815161122a88826111cd565b9750611235836111e5565b925050600181019050611216565b5085935050505092915050565b600063ffffffff82169050919050565b61126981611250565b82525050565b600060c083016000830151848203600086015261128c8282611134565b91505060208301516112a16020860182611179565b5060408301516112b46040860182611179565b50606083015184820360608601526112cc82826111f2565b91505060808301516112e16080860182611260565b5060a08301516112f460a0860182611260565b508091505092915050565b600061130b838361126f565b905092915050565b6000602082019050919050565b600061132b826110a8565b61133581856110b3565b935083602082028501611347856110c4565b8060005b85811015611383578484038952815161136485826112ff565b945061136f83611313565b925060208a0199505060018101905061134b565b50829750879550505050505092915050565b600060208201905081810360008301526113af8184611320565b905092915050565b600082825260208201905092915050565b60006113d3826110d4565b6113dd81856113b7565b93506113ed8185602086016110f0565b6113f681611123565b840191505092915050565b61140a8161116d565b82525050565b61141981611250565b82525050565b600060a082019050818103600083015261143981886113c8565b90506114486020830187611401565b6114556040830186611401565b6114626060830185611410565b61146f6080830184611410565b9695505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114b682611123565b810181811067ffffffffffffffff821117156114d5576114d461147e565b5b80604052505050565b60006114e8610fd5565b90506114f482826114ad565b919050565b600067ffffffffffffffff8211156115145761151361147e565b5b602082029050602081019050919050565b600080fd5b611533816111b4565b811461153e57600080fd5b50565b6000813590506115508161152a565b92915050565b6000611569611564846114f9565b6114de565b9050808382526020820190506020840283018581111561158c5761158b611525565b5b835b818110156115b557806115a18882611541565b84526020840193505060208101905061158e565b5050509392505050565b600082601f8301126115d4576115d3611479565b5b81356115e4848260208601611556565b91505092915050565b6000806040838503121561160457611603610fdf565b5b60006116128582860161100a565b925050602083013567ffffffffffffffff81111561163357611632610fe4565b5b61163f858286016115bf565b9150509250929050565b600060208201905061165e6000830184611410565b92915050565b600082825260208201905092915050565b600061168082611188565b61168a8185611664565b9350611695836111a4565b8060005b838110156116c65781516116ad88826111cd565b97506116b8836111e5565b925050600181019050611699565b5085935050505092915050565b600060c08201905081810360008301526116ed81896113c8565b90506116fc6020830188611401565b6117096040830187611401565b818103606083015261171b8186611675565b905061172a6080830185611410565b61173760a0830184611410565b979650505050505050565b600080fd5b600067ffffffffffffffff8211156117625761176161147e565b5b61176b82611123565b9050602081019050919050565b82818337600083830152505050565b600061179a61179584611747565b6114de565b9050828152602081018484840111156117b6576117b5611742565b5b6117c1848285611778565b509392505050565b600082601f8301126117de576117dd611479565b5b81356117ee848260208601611787565b91505092915050565b6000806000606084860312156118105761180f610fdf565b5b600084013567ffffffffffffffff81111561182e5761182d610fe4565b5b61183a868287016117c9565b935050602061184b8682870161100a565b925050604084013567ffffffffffffffff81111561186c5761186b610fe4565b5b611878868287016115bf565b9150509250925092565b61188b81610fe9565b82525050565b60006020820190506118a66000830184611882565b92915050565b6118b58161106c565b81146118c057600080fd5b50565b6000813590506118d2816118ac565b92915050565b6000602082840312156118ee576118ed610fdf565b5b60006118fc848285016118c3565b91505092915050565b6000819050919050565b61191881611905565b82525050565b6000602082019050611933600083018461190f565b92915050565b600080604083850312156119505761194f610fdf565b5b600083013567ffffffffffffffff81111561196e5761196d610fe4565b5b61197a858286016117c9565b925050602061198b8582860161100a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806119dc57607f821691505b602082108114156119f0576119ef611995565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60008154611a47816119c4565b611a5181866113b7565b94506001821660008114611a6c5760018114611a7e57611ab1565b60ff1983168652602086019350611ab1565b611a8785611a25565b60005b83811015611aa957815481890152600182019150602081019050611a8a565b808801955050505b50505092915050565b60006040820190508181036000830152611ad48185611a3a565b9050611ae36020830184611882565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611b2482610fe9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611b5757611b56611aea565b5b600182019050919050565b6000611b6d82611905565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ba057611b9f611aea565b5b600182019050919050565b6000819050919050565b6000611bd0611bcb611bc684611250565b611bab565b610fe9565b9050919050565b611be081611bb5565b82525050565b60006060820190508181036000830152611c0081866113c8565b9050611c0f6020830185611bd7565b611c1c6040830184611882565b94935050505056fea2646970667358221220d07bef04711b9fc786bd10644abcac966c004f5df345f0271faaaba56181777164736f6c634300080b0033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songs",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Song)15_storage)dyn_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songToOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 31,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songOwnerCount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_int256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Song)15_storage)dyn_storage": {
        "base": "t_struct(Song)15_storage",
        "encoding": "dynamic_array",
        "label": "struct SharedDataStructures.Song[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_int256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Song)15_storage": {
        "encoding": "inplace",
        "label": "struct SharedDataStructures.Song",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "isMinted",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 7,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "isDeleted",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 10,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "notes",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 14,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "bpm",
            "offset": 4,
            "slot": "3",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}