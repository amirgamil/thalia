{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        }
      ],
      "name": "NewSongCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongEdited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "SongMinted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "newNotes",
          "type": "bytes32[]"
        }
      ],
      "name": "addNotes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "bpm",
          "type": "uint256"
        }
      ],
      "name": "createNewSong",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "deleteSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "num",
          "type": "uint256"
        }
      ],
      "name": "double",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllSongs",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isMinted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "bytes32[]",
              "name": "notes",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "bpm",
              "type": "uint32"
            }
          ],
          "internalType": "struct SharedDataStructures.Song[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfSongs",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getSongFromId",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "bool",
              "name": "isMinted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "isDeleted",
              "type": "bool"
            },
            {
              "internalType": "bytes32[]",
              "name": "notes",
              "type": "bytes32[]"
            },
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "bpm",
              "type": "uint32"
            }
          ],
          "internalType": "struct SharedDataStructures.Song",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "mintSong",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "songOwnerCount",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "songs",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "bool",
          "name": "isMinted",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "isDeleted",
          "type": "bool"
        },
        {
          "internalType": "uint32",
          "name": "id",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "bpm",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x5c3844af118c7fa26daf6f5b192006de3b2150b2e4861ad955ebe377b218af66",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1582951",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0xc8490a1dbc33484a9c0ed03d8c38294c561f9d3ea66e2f0287f283adf698d2f1",
    "transactionHash": "0x5c3844af118c7fa26daf6f5b192006de3b2150b2e4861ad955ebe377b218af66",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1582951",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "f732065ae69e1f1402b2e55ce45a79c6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"}],\"name\":\"NewSongCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongEdited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"SongMinted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"newNotes\",\"type\":\"bytes32[]\"}],\"name\":\"addNotes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"bpm\",\"type\":\"uint256\"}],\"name\":\"createNewSong\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"deleteSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"double\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllSongs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"notes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"internalType\":\"struct SharedDataStructures.Song[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfSongs\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getSongFromId\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"bytes32[]\",\"name\":\"notes\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"internalType\":\"struct SharedDataStructures.Song\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"mintSong\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"songOwnerCount\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"songs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"isMinted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isDeleted\",\"type\":\"bool\"},{\"internalType\":\"uint32\",\"name\":\"id\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"bpm\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SongStorage.sol\":\"SongStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SharedDataStructures.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nlibrary SharedDataStructures {\\n    struct Song {\\n        string name;\\n        //@notice, a song that has been minted into an NFT and stored on the Permaweb\\n        //can no longer be added to it.\\n        bool isMinted;\\n        //@notice we keep a record of whether a song has been deleted or not\\n        //to avoid to having to make an expensive write to adjust ids of existing songs.\\n        //Instead, we set this boolean variable and delete notes.\\n        //Any interaction with this song checks that this is not deleted\\n        bool isDeleted;\\n        //@notice array of characters that compromise the notes of the song. These\\n        //get directly synthesized in the client by mapping them to actual notes.\\n        //We uses bytes32 since each character in a song is of a fixed size, and\\n        //this is more gas-optimized/cheaper\\n        bytes32[] notes;\\n        //@notice we use uint32 for struct packing\\n        uint32 id;\\n        uint32 bpm;\\n    }\\n}\",\"keccak256\":\"0x9f037695579ed9bb61468f8bd028c183b4a110b958179a877c7a4a7711548a3d\",\"license\":\"MIT\"},\"contracts/SongStorage.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity ^0.8.10;\\n\\nimport \\\"./SharedDataStructures.sol\\\";\\n\\ncontract SongStorage {\\n    SharedDataStructures.Song[] public songs;\\n    mapping (uint => address) public songToOwner; \\n    mapping (address => int) public songOwnerCount; \\n\\n    //@notice event for when a new song is made\\n    event NewSongCreated (string name, uint id, uint bpm);\\n    event SongEdited (string name, uint id);\\n    event SongDeleted(string name, uint id);\\n    event SongMinted(string name, uint id);\\n\\n    function getAllSongs() view public returns (SharedDataStructures.Song[] memory) {\\n        return songs;\\n    }\\n\\n    function getSongFromId(uint id) view public returns (SharedDataStructures.Song memory) {\\n        return songs[id];\\n    }\\n\\n    function getNumberOfSongs() view public returns (uint32) {\\n        return uint32(songs.length);\\n    }\\n\\n    function _getSongOwner(uint id) view internal returns (address) {\\n        return songToOwner[id];\\n    }\\n\\n    function double(uint num) pure public returns (uint) {\\n        return num * 2;\\n    }\\n    \\n    modifier onlySongOwner(uint id) {\\n        require(msg.sender == _getSongOwner(id));\\n        _;\\n    }\\n\\n    function _createSong(string memory _name, uint bpm) internal returns (uint) {\\n        uint32 newId = getNumberOfSongs();\\n        //@notice set limit on number of songs a person can create to prevent bots etc.\\n        require(songOwnerCount[msg.sender] < 15);\\n\\n        songs.push(SharedDataStructures.Song({name: _name, isMinted: false, isDeleted: false, notes: new bytes32[](0), id: newId, bpm: uint32(bpm)}));\\n\\n        songToOwner[newId] = msg.sender;\\n        //@notice we don't need to check if this exists due to Solidity's design of mappings\\n        songOwnerCount[msg.sender]++;\\n\\n        emit NewSongCreated(_name, newId, bpm);\\n\\n        return newId; \\n    }  \\n\\n    //@notice returns the id of the newly created song\\n    function createNewSong(string memory _name, uint bpm) public returns (uint) {\\n        return _createSong(_name, bpm);\\n    }\\n\\n    function _addNotesToSong(uint id, bytes32[] memory newNotes) internal {\\n        //@notice ensure we're adding to a song that actually exists\\n        require(id < songs.length);\\n        //@notice for now, can only append 15 new notes at a time\\n        require(newNotes.length < 15);\\n\\n        SharedDataStructures.Song storage currentSong = songs[id];\\n\\n        require(!currentSong.isDeleted);\\n        require(!currentSong.isMinted);\\n\\n        for (uint i=0; i < newNotes.length; i++) {\\n            currentSong.notes.push(newNotes[i]);\\n        }\\n\\n        emit SongEdited(currentSong.name, id);\\n\\n    }\\n\\n    function addNotes(uint id, bytes32[] memory newNotes) public {\\n        _addNotesToSong(id, newNotes);\\n    }\\n\\n    function deleteSong(uint id) onlySongOwner(id) public {\\n        require(id < songs.length);\\n        require(!songs[id].isDeleted);\\n\\n        songs[id].isDeleted = true;\\n        //@notice we delete the most expensive part of storing a song and bpm\\n        //which will no longer be used\\n        delete songs[id].notes;\\n        delete songs[id].bpm;\\n\\n        emit SongDeleted(songs[id].name, id);\\n    }\\n\\n    function mintSong(uint id) public {\\n        require(id < songs.length);\\n        require(!songs[id].isDeleted);\\n\\n        songs[id].isMinted = true;\\n\\n        emit SongMinted(songs[id].name, id);\\n\\n    }\\n\\n}\",\"keccak256\":\"0xe4a67572dcd3b11721b59cc29e864097fa3bb19d286ae36b62bd6af683fe76a2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611bb8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a8ec42d811610071578063a8ec42d814610168578063e0eb2d8214610186578063e970a2c4146101a2578063eee97206146101d2578063f9ce14ab14610202578063fa8ce78314610232576100a9565b806329921f3d146100ae57806329ef6862146100de578063304cff30146100fc578063408dd3181461013057806366fa94391461014c575b600080fd5b6100c860048036038101906100c39190610fda565b610262565b6040516100d59190611048565b60405180910390f35b6100e6610295565b6040516100f39190611350565b60405180910390f35b61011660048036038101906101119190610fda565b610460565b6040516101279594939291906113da565b60405180910390f35b61014a60048036038101906101459190610fda565b610568565b005b610166600480360381019061016191906115a8565b610654565b005b610170610662565b60405161017d9190611604565b60405180910390f35b6101a0600480360381019061019b9190610fda565b61066e565b005b6101bc60048036038101906101b79190610fda565b610805565b6040516101c991906116af565b60405180910390f35b6101ec60048036038101906101e79190610fda565b6109ad565b6040516101f991906116e0565b60405180910390f35b61021c60048036038101906102179190611727565b6109c3565b604051610229919061176d565b60405180910390f35b61024c6004803603810190610247919061183d565b6109db565b60405161025991906116e0565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561045757838290600052602060002090600402016040518060c00160405290816000820180546102ec906118c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610318906118c8565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff16151515158152602001600282018054806020026020016040519081016040528092919081815260200182805480156103f357602002820191906000526020600020905b8154815260200190600101908083116103df575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050815260200190600101906102b9565b50505050905090565b6000818154811061047057600080fd5b9060005260206000209060040201600091509050806000018054610493906118c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104bf906118c8565b801561050c5780601f106104e15761010080835404028352916020019161050c565b820191906000526020600020905b8154815290600101906020018083116104ef57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16905085565b600080549050811061057957600080fd5b6000818154811061058d5761058c6118fa565b5b906000526020600020906004020160010160019054906101000a900460ff16156105b657600080fd5b6001600082815481106105cc576105cb6118fa565b5b906000526020600020906004020160010160006101000a81548160ff0219169083151502179055507fc778ab168cf50ad9990325dab79ac53c265f46e968c7e7e9a656917ddcd214f860008281548110610629576106286118fa565b5b9060005260206000209060040201600001826040516106499291906119be565b60405180910390a150565b61065e82826109ef565b5050565b60008080549050905090565b8061067881610b11565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106af57600080fd5b60008054905082106106c057600080fd5b600082815481106106d4576106d36118fa565b5b906000526020600020906004020160010160019054906101000a900460ff16156106fd57600080fd5b600160008381548110610713576107126118fa565b5b906000526020600020906004020160010160016101000a81548160ff0219169083151502179055506000828154811061074f5761074e6118fa565b5b9060005260206000209060040201600201600061076c9190610e1c565b600082815481106107805761077f6118fa565b5b906000526020600020906004020160030160046101000a81549063ffffffff02191690557f183bbdfff8def210a436cb315786c936109b5fb4c0b5c21350a735183fce41f1600083815481106107d9576107d86118fa565b5b9060005260206000209060040201600001836040516107f99291906119be565b60405180910390a15050565b61080d610e3d565b60008281548110610821576108206118fa565b5b90600052602060002090600402016040518060c001604052908160008201805461084a906118c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610876906118c8565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561095157602002820191906000526020600020905b81548152602001906001019080831161093d575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050919050565b60006002826109bc9190611a1d565b9050919050565b60026020528060005260406000206000915090505481565b60006109e78383610b4e565b905092915050565b6000805490508210610a0057600080fd5b600f815110610a0e57600080fd5b6000808381548110610a2357610a226118fa565b5b906000526020600020906004020190508060010160019054906101000a900460ff1615610a4f57600080fd5b8060010160009054906101000a900460ff1615610a6b57600080fd5b60005b8251811015610acf5781600201838281518110610a8e57610a8d6118fa565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150558080610ac790611a77565b915050610a6e565b507f658fe9d65ce0430feac5385a825e9ccebc9b0cf9e422d97acbca097ee8aa27098160000184604051610b049291906119be565b60405180910390a1505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610b59610662565b9050600f600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412610ba757600080fd5b60006040518060c00160405280868152602001600015158152602001600015158152602001600067ffffffffffffffff811115610be757610be6611439565b5b604051908082528060200260200182016040528015610c155781602001602082028036833780820191505090505b5081526020018363ffffffff1681526020018563ffffffff1681525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610c76929190610e83565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055506060820151816002019080519060200190610cd3929190610f09565b5060808201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160046101000a81548163ffffffff021916908363ffffffff160217905550505033600160008363ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610dcc90611ac0565b91905055507f703bc72923f32c87b82929cc095acb284b614c7b0d9691d2709ee77430fcacf0848285604051610e0493929190611b44565b60405180910390a18063ffffffff1691505092915050565b5080546000825590600052602060002090810190610e3a9190610f56565b50565b6040518060c001604052806060815260200160001515815260200160001515815260200160608152602001600063ffffffff168152602001600063ffffffff1681525090565b828054610e8f906118c8565b90600052602060002090601f016020900481019282610eb15760008555610ef8565b82601f10610eca57805160ff1916838001178555610ef8565b82800160010185558215610ef8579182015b82811115610ef7578251825591602001919060010190610edc565b5b509050610f059190610f73565b5090565b828054828255906000526020600020908101928215610f45579160200282015b82811115610f44578251825591602001919060010190610f29565b5b509050610f529190610f56565b5090565b5b80821115610f6f576000816000905550600101610f57565b5090565b5b80821115610f8c576000816000905550600101610f74565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610fb781610fa4565b8114610fc257600080fd5b50565b600081359050610fd481610fae565b92915050565b600060208284031215610ff057610fef610f9a565b5b6000610ffe84828501610fc5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103282611007565b9050919050565b61104281611027565b82525050565b600060208201905061105d6000830184611039565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110c95780820151818401526020810190506110ae565b838111156110d8576000848401525b50505050565b6000601f19601f8301169050919050565b60006110fa8261108f565b611104818561109a565b93506111148185602086016110ab565b61111d816110de565b840191505092915050565b60008115159050919050565b61113d81611128565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6111828161116f565b82525050565b60006111948383611179565b60208301905092915050565b6000602082019050919050565b60006111b882611143565b6111c2818561114e565b93506111cd8361115f565b8060005b838110156111fe5781516111e58882611188565b97506111f0836111a0565b9250506001810190506111d1565b5085935050505092915050565b600063ffffffff82169050919050565b6112248161120b565b82525050565b600060c083016000830151848203600086015261124782826110ef565b915050602083015161125c6020860182611134565b50604083015161126f6040860182611134565b506060830151848203606086015261128782826111ad565b915050608083015161129c608086018261121b565b5060a08301516112af60a086018261121b565b508091505092915050565b60006112c6838361122a565b905092915050565b6000602082019050919050565b60006112e682611063565b6112f0818561106e565b9350836020820285016113028561107f565b8060005b8581101561133e578484038952815161131f85826112ba565b945061132a836112ce565b925060208a01995050600181019050611306565b50829750879550505050505092915050565b6000602082019050818103600083015261136a81846112db565b905092915050565b600082825260208201905092915050565b600061138e8261108f565b6113988185611372565b93506113a88185602086016110ab565b6113b1816110de565b840191505092915050565b6113c581611128565b82525050565b6113d48161120b565b82525050565b600060a08201905081810360008301526113f48188611383565b905061140360208301876113bc565b61141060408301866113bc565b61141d60608301856113cb565b61142a60808301846113cb565b9695505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611471826110de565b810181811067ffffffffffffffff821117156114905761148f611439565b5b80604052505050565b60006114a3610f90565b90506114af8282611468565b919050565b600067ffffffffffffffff8211156114cf576114ce611439565b5b602082029050602081019050919050565b600080fd5b6114ee8161116f565b81146114f957600080fd5b50565b60008135905061150b816114e5565b92915050565b600061152461151f846114b4565b611499565b90508083825260208201905060208402830185811115611547576115466114e0565b5b835b81811015611570578061155c88826114fc565b845260208401935050602081019050611549565b5050509392505050565b600082601f83011261158f5761158e611434565b5b813561159f848260208601611511565b91505092915050565b600080604083850312156115bf576115be610f9a565b5b60006115cd85828601610fc5565b925050602083013567ffffffffffffffff8111156115ee576115ed610f9f565b5b6115fa8582860161157a565b9150509250929050565b600060208201905061161960008301846113cb565b92915050565b600060c083016000830151848203600086015261163c82826110ef565b91505060208301516116516020860182611134565b5060408301516116646040860182611134565b506060830151848203606086015261167c82826111ad565b9150506080830151611691608086018261121b565b5060a08301516116a460a086018261121b565b508091505092915050565b600060208201905081810360008301526116c9818461161f565b905092915050565b6116da81610fa4565b82525050565b60006020820190506116f560008301846116d1565b92915050565b61170481611027565b811461170f57600080fd5b50565b600081359050611721816116fb565b92915050565b60006020828403121561173d5761173c610f9a565b5b600061174b84828501611712565b91505092915050565b6000819050919050565b61176781611754565b82525050565b6000602082019050611782600083018461175e565b92915050565b600080fd5b600067ffffffffffffffff8211156117a8576117a7611439565b5b6117b1826110de565b9050602081019050919050565b82818337600083830152505050565b60006117e06117db8461178d565b611499565b9050828152602081018484840111156117fc576117fb611788565b5b6118078482856117be565b509392505050565b600082601f83011261182457611823611434565b5b81356118348482602086016117cd565b91505092915050565b6000806040838503121561185457611853610f9a565b5b600083013567ffffffffffffffff81111561187257611871610f9f565b5b61187e8582860161180f565b925050602061188f85828601610fc5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118e057607f821691505b602082108114156118f4576118f3611899565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b6000815461194b816118c8565b6119558186611372565b945060018216600081146119705760018114611982576119b5565b60ff19831686526020860193506119b5565b61198b85611929565b60005b838110156119ad5781548189015260018201915060208101905061198e565b808801955050505b50505092915050565b600060408201905081810360008301526119d8818561193e565b90506119e760208301846116d1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a2882610fa4565b9150611a3383610fa4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a6c57611a6b6119ee565b5b828202905092915050565b6000611a8282610fa4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ab557611ab46119ee565b5b600182019050919050565b6000611acb82611754565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611afe57611afd6119ee565b5b600182019050919050565b6000819050919050565b6000611b2e611b29611b248461120b565b611b09565b610fa4565b9050919050565b611b3e81611b13565b82525050565b60006060820190508181036000830152611b5e8186611383565b9050611b6d6020830185611b35565b611b7a60408301846116d1565b94935050505056fea2646970667358221220d2fa532f436b611389c4e0d729187fbdb1f2e2b8bd18a6fa522a2cc3b88402f564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a8ec42d811610071578063a8ec42d814610168578063e0eb2d8214610186578063e970a2c4146101a2578063eee97206146101d2578063f9ce14ab14610202578063fa8ce78314610232576100a9565b806329921f3d146100ae57806329ef6862146100de578063304cff30146100fc578063408dd3181461013057806366fa94391461014c575b600080fd5b6100c860048036038101906100c39190610fda565b610262565b6040516100d59190611048565b60405180910390f35b6100e6610295565b6040516100f39190611350565b60405180910390f35b61011660048036038101906101119190610fda565b610460565b6040516101279594939291906113da565b60405180910390f35b61014a60048036038101906101459190610fda565b610568565b005b610166600480360381019061016191906115a8565b610654565b005b610170610662565b60405161017d9190611604565b60405180910390f35b6101a0600480360381019061019b9190610fda565b61066e565b005b6101bc60048036038101906101b79190610fda565b610805565b6040516101c991906116af565b60405180910390f35b6101ec60048036038101906101e79190610fda565b6109ad565b6040516101f991906116e0565b60405180910390f35b61021c60048036038101906102179190611727565b6109c3565b604051610229919061176d565b60405180910390f35b61024c6004803603810190610247919061183d565b6109db565b60405161025991906116e0565b60405180910390f35b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561045757838290600052602060002090600402016040518060c00160405290816000820180546102ec906118c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610318906118c8565b80156103655780601f1061033a57610100808354040283529160200191610365565b820191906000526020600020905b81548152906001019060200180831161034857829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff16151515158152602001600282018054806020026020016040519081016040528092919081815260200182805480156103f357602002820191906000526020600020905b8154815260200190600101908083116103df575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050815260200190600101906102b9565b50505050905090565b6000818154811061047057600080fd5b9060005260206000209060040201600091509050806000018054610493906118c8565b80601f01602080910402602001604051908101604052809291908181526020018280546104bf906118c8565b801561050c5780601f106104e15761010080835404028352916020019161050c565b820191906000526020600020905b8154815290600101906020018083116104ef57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900460ff16908060030160009054906101000a900463ffffffff16908060030160049054906101000a900463ffffffff16905085565b600080549050811061057957600080fd5b6000818154811061058d5761058c6118fa565b5b906000526020600020906004020160010160019054906101000a900460ff16156105b657600080fd5b6001600082815481106105cc576105cb6118fa565b5b906000526020600020906004020160010160006101000a81548160ff0219169083151502179055507fc778ab168cf50ad9990325dab79ac53c265f46e968c7e7e9a656917ddcd214f860008281548110610629576106286118fa565b5b9060005260206000209060040201600001826040516106499291906119be565b60405180910390a150565b61065e82826109ef565b5050565b60008080549050905090565b8061067881610b11565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106af57600080fd5b60008054905082106106c057600080fd5b600082815481106106d4576106d36118fa565b5b906000526020600020906004020160010160019054906101000a900460ff16156106fd57600080fd5b600160008381548110610713576107126118fa565b5b906000526020600020906004020160010160016101000a81548160ff0219169083151502179055506000828154811061074f5761074e6118fa565b5b9060005260206000209060040201600201600061076c9190610e1c565b600082815481106107805761077f6118fa565b5b906000526020600020906004020160030160046101000a81549063ffffffff02191690557f183bbdfff8def210a436cb315786c936109b5fb4c0b5c21350a735183fce41f1600083815481106107d9576107d86118fa565b5b9060005260206000209060040201600001836040516107f99291906119be565b60405180910390a15050565b61080d610e3d565b60008281548110610821576108206118fa565b5b90600052602060002090600402016040518060c001604052908160008201805461084a906118c8565b80601f0160208091040260200160405190810160405280929190818152602001828054610876906118c8565b80156108c35780601f10610898576101008083540402835291602001916108c3565b820191906000526020600020905b8154815290600101906020018083116108a657829003601f168201915b505050505081526020016001820160009054906101000a900460ff161515151581526020016001820160019054906101000a900460ff161515151581526020016002820180548060200260200160405190810160405280929190818152602001828054801561095157602002820191906000526020600020905b81548152602001906001019080831161093d575b505050505081526020016003820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016003820160049054906101000a900463ffffffff1663ffffffff1663ffffffff16815250509050919050565b60006002826109bc9190611a1d565b9050919050565b60026020528060005260406000206000915090505481565b60006109e78383610b4e565b905092915050565b6000805490508210610a0057600080fd5b600f815110610a0e57600080fd5b6000808381548110610a2357610a226118fa565b5b906000526020600020906004020190508060010160019054906101000a900460ff1615610a4f57600080fd5b8060010160009054906101000a900460ff1615610a6b57600080fd5b60005b8251811015610acf5781600201838281518110610a8e57610a8d6118fa565b5b602002602001015190806001815401808255809150506001900390600052602060002001600090919091909150558080610ac790611a77565b915050610a6e565b507f658fe9d65ce0430feac5385a825e9ccebc9b0cf9e422d97acbca097ee8aa27098160000184604051610b049291906119be565b60405180910390a1505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610b59610662565b9050600f600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205412610ba757600080fd5b60006040518060c00160405280868152602001600015158152602001600015158152602001600067ffffffffffffffff811115610be757610be6611439565b5b604051908082528060200260200182016040528015610c155781602001602082028036833780820191505090505b5081526020018363ffffffff1681526020018563ffffffff1681525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019080519060200190610c76929190610e83565b5060208201518160010160006101000a81548160ff02191690831515021790555060408201518160010160016101000a81548160ff0219169083151502179055506060820151816002019080519060200190610cd3929190610f09565b5060808201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555060a08201518160030160046101000a81548163ffffffff021916908363ffffffff160217905550505033600160008363ffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000815480929190610dcc90611ac0565b91905055507f703bc72923f32c87b82929cc095acb284b614c7b0d9691d2709ee77430fcacf0848285604051610e0493929190611b44565b60405180910390a18063ffffffff1691505092915050565b5080546000825590600052602060002090810190610e3a9190610f56565b50565b6040518060c001604052806060815260200160001515815260200160001515815260200160608152602001600063ffffffff168152602001600063ffffffff1681525090565b828054610e8f906118c8565b90600052602060002090601f016020900481019282610eb15760008555610ef8565b82601f10610eca57805160ff1916838001178555610ef8565b82800160010185558215610ef8579182015b82811115610ef7578251825591602001919060010190610edc565b5b509050610f059190610f73565b5090565b828054828255906000526020600020908101928215610f45579160200282015b82811115610f44578251825591602001919060010190610f29565b5b509050610f529190610f56565b5090565b5b80821115610f6f576000816000905550600101610f57565b5090565b5b80821115610f8c576000816000905550600101610f74565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610fb781610fa4565b8114610fc257600080fd5b50565b600081359050610fd481610fae565b92915050565b600060208284031215610ff057610fef610f9a565b5b6000610ffe84828501610fc5565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061103282611007565b9050919050565b61104281611027565b82525050565b600060208201905061105d6000830184611039565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110c95780820151818401526020810190506110ae565b838111156110d8576000848401525b50505050565b6000601f19601f8301169050919050565b60006110fa8261108f565b611104818561109a565b93506111148185602086016110ab565b61111d816110de565b840191505092915050565b60008115159050919050565b61113d81611128565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6111828161116f565b82525050565b60006111948383611179565b60208301905092915050565b6000602082019050919050565b60006111b882611143565b6111c2818561114e565b93506111cd8361115f565b8060005b838110156111fe5781516111e58882611188565b97506111f0836111a0565b9250506001810190506111d1565b5085935050505092915050565b600063ffffffff82169050919050565b6112248161120b565b82525050565b600060c083016000830151848203600086015261124782826110ef565b915050602083015161125c6020860182611134565b50604083015161126f6040860182611134565b506060830151848203606086015261128782826111ad565b915050608083015161129c608086018261121b565b5060a08301516112af60a086018261121b565b508091505092915050565b60006112c6838361122a565b905092915050565b6000602082019050919050565b60006112e682611063565b6112f0818561106e565b9350836020820285016113028561107f565b8060005b8581101561133e578484038952815161131f85826112ba565b945061132a836112ce565b925060208a01995050600181019050611306565b50829750879550505050505092915050565b6000602082019050818103600083015261136a81846112db565b905092915050565b600082825260208201905092915050565b600061138e8261108f565b6113988185611372565b93506113a88185602086016110ab565b6113b1816110de565b840191505092915050565b6113c581611128565b82525050565b6113d48161120b565b82525050565b600060a08201905081810360008301526113f48188611383565b905061140360208301876113bc565b61141060408301866113bc565b61141d60608301856113cb565b61142a60808301846113cb565b9695505050505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611471826110de565b810181811067ffffffffffffffff821117156114905761148f611439565b5b80604052505050565b60006114a3610f90565b90506114af8282611468565b919050565b600067ffffffffffffffff8211156114cf576114ce611439565b5b602082029050602081019050919050565b600080fd5b6114ee8161116f565b81146114f957600080fd5b50565b60008135905061150b816114e5565b92915050565b600061152461151f846114b4565b611499565b90508083825260208201905060208402830185811115611547576115466114e0565b5b835b81811015611570578061155c88826114fc565b845260208401935050602081019050611549565b5050509392505050565b600082601f83011261158f5761158e611434565b5b813561159f848260208601611511565b91505092915050565b600080604083850312156115bf576115be610f9a565b5b60006115cd85828601610fc5565b925050602083013567ffffffffffffffff8111156115ee576115ed610f9f565b5b6115fa8582860161157a565b9150509250929050565b600060208201905061161960008301846113cb565b92915050565b600060c083016000830151848203600086015261163c82826110ef565b91505060208301516116516020860182611134565b5060408301516116646040860182611134565b506060830151848203606086015261167c82826111ad565b9150506080830151611691608086018261121b565b5060a08301516116a460a086018261121b565b508091505092915050565b600060208201905081810360008301526116c9818461161f565b905092915050565b6116da81610fa4565b82525050565b60006020820190506116f560008301846116d1565b92915050565b61170481611027565b811461170f57600080fd5b50565b600081359050611721816116fb565b92915050565b60006020828403121561173d5761173c610f9a565b5b600061174b84828501611712565b91505092915050565b6000819050919050565b61176781611754565b82525050565b6000602082019050611782600083018461175e565b92915050565b600080fd5b600067ffffffffffffffff8211156117a8576117a7611439565b5b6117b1826110de565b9050602081019050919050565b82818337600083830152505050565b60006117e06117db8461178d565b611499565b9050828152602081018484840111156117fc576117fb611788565b5b6118078482856117be565b509392505050565b600082601f83011261182457611823611434565b5b81356118348482602086016117cd565b91505092915050565b6000806040838503121561185457611853610f9a565b5b600083013567ffffffffffffffff81111561187257611871610f9f565b5b61187e8582860161180f565b925050602061188f85828601610fc5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118e057607f821691505b602082108114156118f4576118f3611899565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b6000815461194b816118c8565b6119558186611372565b945060018216600081146119705760018114611982576119b5565b60ff19831686526020860193506119b5565b61198b85611929565b60005b838110156119ad5781548189015260018201915060208101905061198e565b808801955050505b50505092915050565b600060408201905081810360008301526119d8818561193e565b90506119e760208301846116d1565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611a2882610fa4565b9150611a3383610fa4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611a6c57611a6b6119ee565b5b828202905092915050565b6000611a8282610fa4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ab557611ab46119ee565b5b600182019050919050565b6000611acb82611754565b91507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611afe57611afd6119ee565b5b600182019050919050565b6000819050919050565b6000611b2e611b29611b248461120b565b611b09565b610fa4565b9050919050565b611b3e81611b13565b82525050565b60006060820190508181036000830152611b5e8186611383565b9050611b6d6020830185611b35565b611b7a60408301846116d1565b94935050505056fea2646970667358221220d2fa532f436b611389c4e0d729187fbdb1f2e2b8bd18a6fa522a2cc3b88402f564736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 23,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songs",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Song)15_storage)dyn_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songToOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 31,
        "contract": "contracts/SongStorage.sol:SongStorage",
        "label": "songOwnerCount",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_int256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Song)15_storage)dyn_storage": {
        "base": "t_struct(Song)15_storage",
        "encoding": "dynamic_array",
        "label": "struct SharedDataStructures.Song[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_int256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Song)15_storage": {
        "encoding": "inplace",
        "label": "struct SharedDataStructures.Song",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 5,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "isMinted",
            "offset": 0,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 7,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "isDeleted",
            "offset": 1,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 10,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "notes",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 12,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "id",
            "offset": 0,
            "slot": "3",
            "type": "t_uint32"
          },
          {
            "astId": 14,
            "contract": "contracts/SongStorage.sol:SongStorage",
            "label": "bpm",
            "offset": 4,
            "slot": "3",
            "type": "t_uint32"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      }
    }
  }
}